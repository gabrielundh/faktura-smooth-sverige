// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yurxfvgzjiortccycqch.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl1cnhmdmd6amlvcnRjY3ljcWNoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM2MjIxODYsImV4cCI6MjA1OTE5ODE4Nn0.VU3UHwDXba-zCo-WfBZDSC8tAcTffvZQmGkvPdRz7U4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      storageKey: 'faktura-smooth-auth',
      autoRefreshToken: true,
      detectSessionInUrl: true
    },
    global: {
      headers: {
        'x-application-name': 'faktura-smooth',
      },
      fetch: (...args) => {
        // Custom fetch with timeout
        const [resource, config] = args;
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 10000); // 10-second timeout
        
        return fetch(resource, {
          ...config,
          signal: controller.signal
        }).finally(() => {
          clearTimeout(timeoutId);
        });
      }
    },
    realtime: {
      timeout: 30000, // Increase timeout to 30s
    },
    db: {
      schema: 'public',
    },
  }
);